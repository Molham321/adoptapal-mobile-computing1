# Base Image for executing jobs - contains Java and Android SDK with some additional libraries
# See https://github.com/jangrewe/gitlab-ci-android
image: jangrewe/gitlab-ci-android

# Build Stages - release and deploy not used currently
stages:
  #  - prerequisites
  - build
#  - buildTest
#  - deviceTestA
#  - deviceTestB

#variables:
#  APP_ID: "de.fhe.ai.pmc.testlabdemo01"


# Define Gradle Home to use it for (optional) caching
before_script:
#  - export PATH="/opt/homebrew/opt/openjdk@17/bin:$PATH"
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - chmod +x ./gradlew
#  - export ANDROID_HOME=/Users/avemarg/Library/Android/sdk

# Cache instruction - will save intermediate results for later jobs
# Might actually not speed up your pipeline runtime - just check it for yourself
cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .gradle/

build:
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/apk/app-debug.apk

#prepare_build:
#  stage: prerequisites
##  tags:
##    - testlab
#  script:
#    - mkdir apks
#  artifacts:
#    paths:
#      - apks/

## Build a debug apk
#assembleDebug:
#  stage: build
#  tags:
#    - testlab
#  script:
#    - ./gradlew assembleDebug
#    - mv app/build/outputs/apk/debug/app-debug.apk apks/app-debug.apk
#  artifacts:
#    paths:
#      - apks/app-debug.apk
#
## Build a debug test apk
#assembleDebugTest:
#  stage: buildTest
#  tags:
#    - testlab
#  script:
#    - ./gradlew assembleDebugAndroidTest
#    - mv app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk apks/app-debug-androidTest.apk
#  artifacts:
#    paths:
#      - apks/app-debug-androidTest.apk

#test-by-devices-model:
#  stage: deviceTestA
#  script:
#    - $MARATHON_DIR/run_marathon.sh device
#  after_script:
#    - $MARATHON_DIR/cleanup.sh device
#  tags:
#    - testlab
#  allow_failure: true
#  artifacts:
#    when: always
#    reports:
#      junit: $DEVICE_VERSION_RESULT
#    expire_in: "1 day"
#    paths:
#      - $DEVICE_VERSION_RESULT_DIR
#
#test-by-os_version:
#  stage: deviceTestB
#  script:
#    - $MARATHON_DIR/run_marathon.sh os-version
#  after_script:
#    - $MARATHON_DIR/cleanup.sh os-version
#  tags:
#    - testlab
#  allow_failure: true
#  artifacts:
#    when: always
#    reports:
#      junit: $OS_VERSION_RESULT
#    expire_in: "1 day"
#    paths:
#      - $OS_VERSION_RESULT_DIR